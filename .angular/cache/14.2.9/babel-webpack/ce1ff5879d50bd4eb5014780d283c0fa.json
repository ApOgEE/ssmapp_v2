{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@awesome-cordova-plugins/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { NativeStorage } from '@awesome-cordova-plugins/native-storage/ngx';\nimport { Device } from '@awesome-cordova-plugins/device/ngx';\nimport { HTTP } from '@awesome-cordova-plugins/http/ngx';\nimport { InAppBrowser } from '@awesome-cordova-plugins/in-app-browser/ngx';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateConfigService } from './services/translate-config.service';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { AppVersion } from '@awesome-cordova-plugins/app-version/ngx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@ngx-translate/core\";\nexport function LanguageLoader(http) {\n  return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [StatusBar, SplashScreen, AppVersion, TranslateConfigService, NativeStorage, Device, HTTP, InAppBrowser, BarcodeScanner, Network, {\n      provide: RouteReuseStrategy,\n      useClass: IonicRouteStrategy\n    }],\n    imports: [BrowserModule, IonicModule.forRoot(), HttpClientModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: LanguageLoader,\n        deps: [HttpClient]\n      }\n    }), AppRoutingModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}